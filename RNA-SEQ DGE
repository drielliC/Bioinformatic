#Quality Control – Run QC on the FastQ file from the sequencer
sudo apt-get update -y
sudo apt-get install -y fastqc

fastqc [-o output dir] [--(no)extract] [-f fastq|bam|sam] 
           [-c contaminant file] seqfile1 .. seqfileN

fastqc -o leaveall --noextract -f fastq tread_1.fq.gz read_2.fq.gz -t 8 

  
#######################################################################################
sudo apt install cutadapt

cutadapt -m 10 -q 20 -o tp53_r2.fastq_trimmed.fastq.gz tp53_r2.fastq.gz
    -m 10: will discard all reads that would be shorter than a read length of 10 after the trimming,
    -q 20: will trim low-quality bases from the 3’ end of the reads; if two comma-separated cutoffs are given, the 5’ end is trimmed with the first cutoff, the 3’ end with the second,
    -o FILE_NAME: the output file name.

https://ro-che.info/articles/2018-06-19-cutting-adapters
cutadapt --cores=10 -a GATCGGAAGAGCACACGTCTGAACTCCAGTCACCCGTCCCGATCTCGTAT -A ATCGGAAGAGCACACGTCTGAACTCCAGTCACCCGTCCCGATCTCGTATG -o leaverd/leave1_1_rd_trimmed.fastq -p leaverd/leave1_2_rd_trimmed.fastq leave1_1_rd.fastq leave1_2_rd.fastq --overlap 4 --minimum-length 40 

sudo apt-get update -y
sudo apt-get install -y trimmomatic
java -jar ~/Documents/Psidium/transcripts/analises/Trimmomatic-0.39/trimmomatic-0.39.jar PE -phred33 ../leave1_1_rd.fastq ../leave1_2_rd.fastq leave1_1_rd_trimmed.fastq leave1_2_rd_trimmed.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:40

##############################################################################################################################

#Mapping – Take the data in the trimmed fastQ file and map it to a reference genome to create a BAM file of mapped positions

~/Documents/Psidium/montagem$ hisat2-build PSI_RD_final_assembly.fasta  PSI_RD_final_assembly_index

hisat2 -p N --dta-cufflinks -x path/to/reference/fileName -1 path/to/fastqFile/sample_1.fastq -2 path/to/fastqFile/sample_2.fastq -S /path/to/outDir/fileName.sam &> /path/to/outDir/fileName.sam.info
hisat2 -p 10 --dta-cufflinks -x PSI_RD_final_assembly_index -1 ../transcripts/analises/leave1_1_rd.fastq -2 ../transcripts/analises/leave1_2_rd.fastq -S leave1.sam

    -p N is the number of threads that will be used by the program.
    --dta-cufflinks will generate a output that is optimal for downstream analysis with cufflinks
    -x /path/to/HiSAT2genome/fileName is the path to a pre-rendered reference library that HiSAT2 uses to map reads to the genome.fileName is the part of the files in the folder without the endings .bt2
    -1 /path/to/read1/sample_1.fastq is where you should add your forward fastq files that you will map to the reference.
    -2 /path/to/read1/sample_2.fastq is where you should add your reverse fastq files that you will map to the reference.
    -s /path/to/output/fileName.sam is the fileName of the samfile that will tell were the reads mapped to the reference.
    > /path/to/output/fileName.sam.info will give the statistics of how many of the reads that mapped that is generated from HiSAT2.

This should run fairly quickly and put a file called fileName.sam in the directory that you specified with -s. 

####################################################################################################
Converting SAM files to BAM files

samtools sort -@ 10 -o leav1_RD_hisat.bam  leave1.sam


    -@: number of cores used
    -o: samtools output assigned by user

# remove SAM files
rm map/*.sam

####################################################################################################
Transcript assembly and quantification with StringTie
StringTie assembles transcripts from RNA-seq reads that have been aligned to the genome,
first grouping the reads into distinct gene loci and then assembling each locus into as many isoforms as are needed to explain the data.

git clone https://github.com/gpertea/stringtie
cd stringtie
make release

convert GFF file to GTF format
gffread /common/Tutorial/Arabidopsis/Athaliana_167_TAIR10.gene.gff3 -T -o Athaliana_167_TAIR10.gene.gtf

~/Desktop/softwares/stringtie -p 10 -G /path/Athaliana_167_TAIR10.gene.gtf -o Athaliana_root_1.gtf -l Athaliana /common/Tutorial/Arabidopsis/ReadAlignment/Athaliana_root_1.bam
~/Desktop/softwares/stringtie/stringtie -p 10 -G ../../gff/PSI_RD_final_assembly.fasta.augustus.gtf -o PSI_RD_leave1_hisat_stringtie.gtf -l PSI_RD leave1_RD_Hisat.bam 
    -p: number of processors
    -G: Reference Genome 
    -o: output gtf file
    -l: SAM file mapped by HISAT2

merge these GTF files into one single file
we first need to make a document which serves as a index for stringtie to read.
Create a txt file with vi, then enter files generated from the previous step, as shown below:


PSI_RD_leave1_hisat_stringtie.gtf 
PSI_RD_leave2_hisat_stringtie.gtf 
PSI_RD_leave3_hisat_stringtie.gtf 

stringtie --merge -p 8 -G /common/Tutorial/Arabidopsis/genes/Athaliana_167_TAIR10.gene.gtf -o stringtie_merged.gtf /common/Tutorial/Arabidopsis/genes/mergelist.txt
~/Desktop/softwares/gffcompare/gffcompare -r ../../gff/PSI_RD_final_assembly.fasta.augustus.gtf -G -o merged stringtie_merged.gtf


##post-processing of StringTie merge output to append ref_gene_id info to the MSTRG gene_id
perl mstrg_prep.pl stringtie_merged.gtf > merged_prep.gtf

cd /some/build/dir
  git clone https://github.com/gpertea/gclib
  git clone https://github.com/gpertea/gffcompare
  cd gffcompare
  make release


mdkir ballgown/

 ~/Desktop/softwares/stringtie/stringtie -e -B -p 10 -G ../merged_prep.gtf -o RD_leave1/ballgown_RD_leave1.gtf  -A RD_leave1/gene_abundances.tsv ../leave1_RD_hisat.bam                              
 ~/Desktop/softwares/stringtie/stringtie -e -B -p 10 -G ../merged_prep.gtf -o RD_leave2/ballgown_RD_leave2.gtf -A RD_leave2/gene_abundances.tsv ../leave2_RD_hisat.bam                              
 ~/Desktop/softwares/stringtie/stringtie -e -B -p 10 -G ../merged_prep.gtf -o RD_leave3/ballgown_RD_leave3.gtf -A RD_leave3/gene_abundances.tsv ../leave3_RD_hisat.bam                                     
 
 
 ~/Desktop/softwares/stringtie/stringtie -e -B -p 10 -G ../merged_prep.gtf -o YW_leave1/ballgown_YW_leave1.gtf -A YW_leave1/gene_abundances.tsv  ../leave1_YW_hisat.bam                                     
 ~/Desktop/softwares/stringtie/stringtie -e -B -p 10 -G ../merged_prep.gtf -o YW_leave2/ballgown_YW_leave2.gtf -A YW_leave2/gene_abundances.tsv ../leave2_YW_hisat.bam
 ~/Desktop/softwares/stringtie/stringtie -e -B -p 10 -G ../merged_prep.gtf -o YW_leave3/ballgown_YW_leave3.gtf -A YW_leave3/gene_abundances.tsv ../leave3_YW_hisat.bam                                     
 
# how many transcripts?
cat stringtie_merged.gtf | grep -v "^#" | awk '$3=="transcript" {print}' | wc -l
    160053
    
wget "https://raw.githubusercontent.com/griffithlab/rnaseq_tutorial/master/scripts/stringtie_expression_matrix.pl"
chmod +x stringtie_expression_matrix.pl

./stringtie_expression_matrix.pl --expression_metric=TPM --result_dirs='RD_leave1,RD_leave2,RD_leave3,YW_leave1,YW_leave2,YW_leave3' --transcript_matrix_file=
transcript_tpm_all_samples.tsv --gene_matrix_file=gene_tpm_all_samples.tsv
./stringtie_expression_matrix.pl --expression_metric=FPKM --result_dirs='RD_leave1,RD_leave2,RD_leave3,YW_leave1,YW_leave2,YW_leave3' --transcript_matrix_file=transcript_fpkm_all_samples.tsv --gene_matrix_file=gene_fpkm_all_samples.tsv
./stringtie_expression_matrix.pl --expression_metric=Coverage --result_dirs='RD_leave1,RD_leave2,RD_leave3,YW_leave1,YW_leave2,YW_leave3' --transcript_matrix_file=transcript_coverage_all_samples.tsv --gene_matrix_file=gene_coverage_all_samples.tsv
head transcript_tpm_all_samples.tsv gene_tpm_all_samples.tsv


    Ballgown_input_files: count files (*ctab files) for each sample

        e_data.ctab: exon-level expression measurements.

        i_data.ctab: intron- (i.e., junction-) level expression measurements

        t_data.ctab: transcript-level expression measurements

        e2t.ctab: table with two columns, e_id and t_id, denoting which exons belong to which transcripts

        i2t.ctab: table with two columns, i_id and t_id, denoting which introns belong to which transcripts

 
#########################################################################################################################
Differential Expression Analysis
R

if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("ballgown")

BiocManager::install("genefilter")
BiocManager::install("dplyr")
BiocManager::install("devtools")

library(ballgown)
library(RSkittleBrewer)
library(genefilter)
library(dplyr)
library(ggplot2)
library(gplots)
library(devtools)
dir <- "~/workspace/R/Arabidopsis" ##Define your own working directory accordingly
setwd(dir)







